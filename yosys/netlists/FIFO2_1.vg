module FIFO2_1(CLK, RST, D_IN, ENQ, FULL_N, D_OUT, DEQ, EMPTY_N, CLR);
  wire ag_00;
  wire ag_01;
  wire ag_02;
  wire ag_03;
  wire ag_04;
  wire ag_05;
  wire ag_06;
  wire ag_07;
  wire ag_08;
  wire ag_09;
  wire ag_10;
  wire ag_11;
  wire ag_12;
  wire ag_13;
  wire ag_14;
  wire ag_15;
  wire ag_16;
  wire ag_17;
  wire ag_18;
  wire ag_19;
  wire ag_20;
  wire ag_21;
  wire ag_22;
  wire ag_23;
  wire ag_24;
  wire ag_25;
  wire ag_26;
  wire ag_27;
  wire ag_28;
  wire ag_29;
  wire ag_30;
  wire ag_31;
  input CLK;
  input CLR;
  input DEQ;
  input D_IN;
  output D_OUT;
  output EMPTY_N;
  input ENQ;
  output FULL_N;
  input RST;
  wire data0_reg;
  wire data1_reg;
  wire empty_reg;
  wire full_reg;

  std_inv ag_32 (
    .a(data1_reg),
    .y(ag_04)
  );
  std_nand2 ag_33 (
    .a(ENQ),
    .b(empty_reg),
    .y(ag_05)
  );
  std_nor2 ag_34 (
    .a(ag_05),
    .b(D_IN),
    .y(ag_06)
  );
  std_aoi ag_35 (
    .a(ag_05),
    .b(ag_04),
    .c(ag_06),
    .y(ag_01)
  );
  std_inv ag_36 (
    .a(ENQ),
    .y(ag_07)
  );
  std_nand2 ag_37 (
    .a(DEQ),
    .b(ag_07),
    .y(ag_08)
  );
  std_inv ag_38 (
    .a(DEQ),
    .y(ag_09)
  );
  std_nand2 ag_39 (
    .a(ag_09),
    .b(ENQ),
    .y(ag_10)
  );
  std_nand2 ag_40 (
    .a(ag_10),
    .b(ag_08),
    .y(ag_11)
  );
  std_nor2 ag_41 (
    .a(ag_11),
    .b(empty_reg),
    .y(ag_12)
  );
  std_inv ag_42 (
    .a(RST),
    .y(ag_13)
  );
  std_nor2 ag_43 (
    .a(ag_13),
    .b(CLR),
    .y(ag_14)
  );
  std_nor2 ag_44 (
    .a(ag_09),
    .b(ENQ),
    .y(ag_15)
  );
  std_nand2 ag_45 (
    .a(ag_15),
    .b(full_reg),
    .y(ag_16)
  );
  std_nand2 ag_46 (
    .a(ag_16),
    .b(ag_14),
    .y(ag_17)
  );
  std_nor2 ag_47 (
    .a(ag_17),
    .b(ag_12),
    .y(ag_02)
  );
  std_inv ag_48 (
    .a(full_reg),
    .y(ag_18)
  );
  std_nand3 ag_49 (
    .a(ag_10),
    .b(ag_08),
    .c(ag_18),
    .y(ag_19)
  );
  std_nor2 ag_50 (
    .a(DEQ),
    .b(ag_07),
    .y(ag_20)
  );
  std_nand2 ag_51 (
    .a(ag_20),
    .b(empty_reg),
    .y(ag_21)
  );
  std_nand2 ag_52 (
    .a(ag_21),
    .b(ag_19),
    .y(ag_22)
  );
  std_nand2 ag_53 (
    .a(ag_22),
    .b(ag_14),
    .y(ag_03)
  );
  std_nand2 ag_54 (
    .a(DEQ),
    .b(ag_18),
    .y(ag_23)
  );
  std_inv ag_55 (
    .a(data0_reg),
    .y(ag_24)
  );
  std_aoi ag_56 (
    .a(ag_09),
    .b(empty_reg),
    .c(ag_07),
    .y(ag_25)
  );
  std_nor2 ag_57 (
    .a(ag_25),
    .b(ag_24),
    .y(ag_26)
  );
  std_nand2 ag_58 (
    .a(ag_26),
    .b(ag_23),
    .y(ag_27)
  );
  std_nor2 ag_59 (
    .a(ag_09),
    .b(full_reg),
    .y(ag_28)
  );
  std_nand2 ag_60 (
    .a(ag_28),
    .b(data1_reg),
    .y(ag_29)
  );
  std_nand2 ag_61 (
    .a(ag_18),
    .b(empty_reg),
    .y(ag_30)
  );
  std_nand3 ag_62 (
    .a(ag_30),
    .b(ag_25),
    .c(D_IN),
    .y(ag_31)
  );
  std_nand3 ag_63 (
    .a(ag_31),
    .b(ag_29),
    .c(ag_27),
    .y(ag_00)
  );
  d_ff ag_64 (
    .clk(CLK),
    .d(ag_00),
    .q(data0_reg)
  );
  d_ff ag_65 (
    .clk(CLK),
    .d(ag_01),
    .q(data1_reg)
  );
  d_ff ag_66 (
    .clk(CLK),
    .d(ag_03),
    .q(full_reg)
  );
  d_ff ag_67 (
    .clk(CLK),
    .d(ag_02),
    .q(empty_reg)
  );
  assign D_OUT = data0_reg;
  assign EMPTY_N = empty_reg;
  assign FULL_N = full_reg;
endmodule
