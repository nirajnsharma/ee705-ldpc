Qflow placement logfile created on Thu May 2 17:24:34 IST 2019
Running blif2cel to generate input files for graywolf
blif2cel.tcl --blif /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore.blif  --lef  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef --cel /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/layout/mkLdpcCore.cel
Opened BLIF file (/home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore.blif) for reading ...
Opened CEL file (/home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/layout/mkLdpcCore.cel) for writing...
Loaded /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef file for reading...
1st pass of blif file /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore.blif. . .
Reading macros and/or technology data from LEF file. . .
LEF file specifies route layer Y pitch as 2
LEF file specifies route layer X pitch as 1.6
Parsing macro AND2X2
Parsing macro AOI21X1
Parsing macro AOI22X1
Parsing macro BUFX2
Parsing macro NOR3X1
Parsing macro DFFPOSX1
Parsing macro INVX1
Parsing macro NAND2X1
Parsing macro NAND3X1
Parsing macro NOR2X1
Parsing macro OAI21X1
Parsing macro OR2X2
Parsing macro XOR2X1
Parsing macro XNOR2X1
Parsing macro CLKBUF1
2nd pass of blif file. . .
3rd pass of blif file. . .
Done!
No mkLdpcCore.cel1 file found for project. . . no partial blockages to apply to layout.
No mkLdpcCore.cel2 file found for project. . . continuing without pin placement hints
Running GrayWolf placement
graywolf  mkLdpcCore

twflow version:2.1 date:Mon May 25 21:15:08 EDT 1992
Authors: Bill Swartz, Carl Sechen
         Yale University

syntax version:v1.1 date:Mon May 25 21:11:10 EDT 1992
TimberWolf System Syntax Checker
Authors: Carl Sechen, Kai-Win Lee, Bill Swartz,
         Dahe Chen, and Jimmy Lam
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Read  800 objects so far...
Read  850 objects so far...
Read  900 objects so far...
Read  950 objects so far...
Read 1000 objects so far...
Read 1050 objects so far...
Read 1100 objects so far...
Read 1150 objects so far...
Read 1200 objects so far...
Read 1250 objects so far...
Read 1300 objects so far...
Read 1350 objects so far...
Read 1400 objects so far...
Read 1450 objects so far...
Read 1500 objects so far...
Read 1550 objects so far...
Read 1600 objects so far...
Read 1650 objects so far...
Read 1700 objects so far...
Read 1750 objects so far...
Read 1800 objects so far...
Read 1850 objects so far...
Read 1900 objects so far...
Read 1950 objects so far...
Read 2000 objects so far...
Read 2050 objects so far...
Read 2100 objects so far...
Read 2150 objects so far...
Read 2200 objects so far...
Read 2250 objects so far...
Read 2300 objects so far...
Read 2350 objects so far...
Read 2400 objects so far...
Read 2450 objects so far...
Read 2500 objects so far...
Read 2550 objects so far...
Read 2600 objects so far...
Read 2650 objects so far...
Read 2700 objects so far...
Read 2750 objects so far...
Read 2800 objects so far...
Read 2850 objects so far...
Read 2900 objects so far...
Read 2950 objects so far...
Read 3000 objects so far...
Read 3050 objects so far...
Read 3100 objects so far...
Read 3150 objects so far...
Read 3200 objects so far...
No syntax errors were found

syntax terminated normally with no errors and 0 warning[s]


----------------------------
Total stdcells     :3220
Total cell width   :2.30e+06
Total cell height  :6.44e+06
Total cell area    :4.60e+09
Total core area    :4.60e+09
Average cell height:2.00e+03


nocut - replacement for Mincut version:v1.0 date:Mon May 25 21:09:40 EDT 1992
TimberWolf System Floorplan Setup Program
Authors: Carl Sechen, Bill Swartz,
         Yale University

Read   50 objects so far...
Read  100 objects so far...
Read  150 objects so far...
Read  200 objects so far...
Read  250 objects so far...
Read  300 objects so far...
Read  350 objects so far...
Read  400 objects so far...
Read  450 objects so far...
Read  500 objects so far...
Read  550 objects so far...
Read  600 objects so far...
Read  650 objects so far...
Read  700 objects so far...
Read  750 objects so far...
Read  800 objects so far...
Read  850 objects so far...
Read  900 objects so far...
Read  950 objects so far...
Read 1000 objects so far...
Read 1050 objects so far...
Read 1100 objects so far...
Read 1150 objects so far...
Read 1200 objects so far...
Read 1250 objects so far...
Read 1300 objects so far...
Read 1350 objects so far...
Read 1400 objects so far...
Read 1450 objects so far...
Read 1500 objects so far...
Read 1550 objects so far...
Read 1600 objects so far...
Read 1650 objects so far...
Read 1700 objects so far...
Read 1750 objects so far...
Read 1800 objects so far...
Read 1850 objects so far...
Read 1900 objects so far...
Read 1950 objects so far...
Read 2000 objects so far...
Read 2050 objects so far...
Read 2100 objects so far...
Read 2150 objects so far...
Read 2200 objects so far...
Read 2250 objects so far...
Read 2300 objects so far...
Read 2350 objects so far...
Read 2400 objects so far...
Read 2450 objects so far...
Read 2500 objects so far...
Read 2550 objects so far...
Read 2600 objects so far...
Read 2650 objects so far...
Read 2700 objects so far...
Read 2750 objects so far...
Read 2800 objects so far...
Read 2850 objects so far...
Read 2900 objects so far...
Read 2950 objects so far...
Read 3000 objects so far...
Read 3050 objects so far...
Read 3100 objects so far...
Read 3150 objects so far...
Read 3200 objects so far...
Splitting mkLdpcCore.cel into mkLdpcCore.scel and mkLdpcCore.mcel...
	done!


nocut - replacement for Mincut terminated normally with no errors and 0 warning[s]


TimberWolfMC version:v2.2 date:Mon May 25 21:18:34 EDT 1992
Authors: Carl Sechen, Bill Swartz, Kai-Win Lee
         Dahe Chen, and Jimmy Lam
         Yale University

config version:v1.0 date:Mon May 25 20:57:18 EDT 1992
Row configuration program
    Yale University


config switches:
	Graphics mode on
	config will inherit window



config terminated normally with no errors and 0 warning[s]


TimberWolfMC terminated normally with no errors and 0 warning[s]



TimberWolfSC switches:
	Graphics mode on
	TimberWolfSC will inherit window

TimberWolfSC version:v6.0 date:Mon May 25 21:19:07 EDT 1992
Row-Based Placement and Global Routing Program
Authors: Carl Sechen, Kai-Win Lee, and Bill Swartz,
         Yale University
  0 
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15 
 16  17  18  19  20  21  22  23  24  25  26  27  28  29  30 
 31  32  33  34  35  36  37  38  39  40  41  42  43  44  45 
 46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 
 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75 
 76  77  78  79  80  81  82  83  84  85  86  87  88  89  90 
 91  92  93  94  95  96  97  98  99 100 101 102 103 104 105 
106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 
121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 
136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 
151 152 153 154 155 156 157 158 
 block left edge is at -399
 the longest block length is 81760
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:29   Its length is:79680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  309
 tracks = 294 at attempts =  1000
 tracks = 284 at attempts =  2000
 tracks = 282 at attempts =  3000
 tracks = 280 at attempts =  4000
 tracks = 278 at attempts =  5000
 tracks = 276 at attempts =  6000
 tracks = 275 at attempts =  7000
 tracks = 274 at attempts =  8000
 tracks = 274 at attempts =  9000
 tracks = 270 at attempts = 10000
 tracks = 270 at attempts = 11000
 tracks = 269 at attempts = 12000
 tracks = 267 at attempts = 13000
 tracks = 267 at attempts = 14000
 tracks = 267 at attempts = 15000
 tracks = 267 at attempts = 16000
 tracks = 267 at attempts = 17000
 tracks = 267 at attempts = 18000
 tracks = 266 at attempts = 19000
 tracks = 266 at attempts = 20000
 tracks = 265 at attempts = 21000
 tracks = 265 at attempts = 22000
 tracks = 265 at attempts = 23000
 tracks = 265 at attempts = 24000
 tracks = 265 at attempts = 25000
 tracks = 265 at attempts = 26000
 tracks = 265 at attempts = 27000
 tracks = 265 at attempts = 28000
 tracks = 265 at attempts = 29000
 tracks = 265 at attempts = 30000
 tracks = 265 at attempts = 31000
 tracks = 265 at attempts = 32000
 tracks = 265 at attempts = 33000
 tracks = 265 at attempts = 34000
 tracks = 265 at attempts = 35000
 tracks = 265 at attempts = 36000
 tracks = 265 at attempts = 37000
 tracks = 265 at attempts = 38000
 tracks = 265 at attempts = 39000
 tracks = 265 at attempts = 40000
 tracks = 265 at attempts = 41000
 tracks = 265 at attempts = 42000
 tracks = 265 at attempts = 43000
 tracks = 265 at attempts = 44000
 tracks = 265 at attempts = 45000
 tracks = 265 at attempts = 46000
 tracks = 265 at attempts = 47000
 tracks = 265 at attempts = 48000
 tracks = 265 at attempts = 49000
 tracks = 265 at attempts = 50000
 tracks = 265 at attempts = 51000
 tracks = 265 at attempts = 52000
 tracks = 265 at attempts = 53000
 tracks = 265 at attempts = 54000
 tracks = 265 at attempts = 55000
 tracks = 265 at attempts = 56000
 tracks = 265 at attempts = 57000
 tracks = 265 at attempts = 58000
 tracks = 265 at attempts = 59000
 tracks = 265 at attempts = 60000
 tracks = 265 at attempts = 61000
 tracks = 265 at attempts = 62000
 tracks = 265 at attempts = 63000
 tracks = 265 at attempts = 64000
 tracks = 265 at attempts = 65000
 tracks = 265 at attempts = 66000
 tracks = 265 at attempts = 67000
 tracks = 265 at attempts = 68000
 tracks = 265 at attempts = 69000
 tracks = 265 at attempts = 70000
 tracks = 265 at attempts = 71000
 tracks = 265 at attempts = 72000
 tracks = 265 at attempts = 73000
 tracks = 265 at attempts = 74000
 tracks = 265 at attempts = 75000
 tracks = 265 at attempts = 76000
 tracks = 265 at attempts = 77000
 tracks = 265 at attempts = 78000
 tracks = 265 at attempts = 79000
 tracks = 265 at attempts = 80000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 81760
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:29   Its length is:79680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  301
 tracks = 289 at attempts =  1000
 tracks = 281 at attempts =  2000
 tracks = 277 at attempts =  3000
 tracks = 275 at attempts =  4000
 tracks = 273 at attempts =  5000
 tracks = 272 at attempts =  6000
 tracks = 270 at attempts =  7000
 tracks = 270 at attempts =  8000
 tracks = 269 at attempts =  9000
 tracks = 268 at attempts = 10000
 tracks = 265 at attempts = 11000
 tracks = 265 at attempts = 12000
 tracks = 265 at attempts = 13000
 tracks = 265 at attempts = 14000
 tracks = 265 at attempts = 15000
 tracks = 264 at attempts = 16000
 tracks = 263 at attempts = 17000
 tracks = 263 at attempts = 18000
 tracks = 263 at attempts = 19000
 tracks = 262 at attempts = 20000
 tracks = 262 at attempts = 21000
 tracks = 261 at attempts = 22000
 tracks = 261 at attempts = 23000
 tracks = 261 at attempts = 24000
 tracks = 261 at attempts = 25000
 tracks = 261 at attempts = 26000
 tracks = 261 at attempts = 27000
 tracks = 261 at attempts = 28000
 tracks = 261 at attempts = 29000
 tracks = 261 at attempts = 30000
 tracks = 260 at attempts = 31000
 tracks = 259 at attempts = 32000
 tracks = 259 at attempts = 33000
 tracks = 259 at attempts = 34000
 tracks = 259 at attempts = 35000
 tracks = 259 at attempts = 36000
 tracks = 259 at attempts = 37000
 tracks = 259 at attempts = 38000
 tracks = 259 at attempts = 39000
 tracks = 259 at attempts = 40000
 tracks = 259 at attempts = 41000
 tracks = 258 at attempts = 42000
 tracks = 258 at attempts = 43000
 tracks = 258 at attempts = 44000
 tracks = 258 at attempts = 45000
 tracks = 258 at attempts = 46000
 tracks = 258 at attempts = 47000
 tracks = 258 at attempts = 48000
 tracks = 258 at attempts = 49000
 tracks = 258 at attempts = 50000
 tracks = 258 at attempts = 51000
 tracks = 258 at attempts = 52000
 tracks = 257 at attempts = 53000
 tracks = 257 at attempts = 54000
 tracks = 257 at attempts = 55000
 tracks = 257 at attempts = 56000
 tracks = 257 at attempts = 57000
 tracks = 257 at attempts = 58000
 tracks = 256 at attempts = 59000
 tracks = 256 at attempts = 60000
 tracks = 256 at attempts = 61000
 tracks = 256 at attempts = 62000
 tracks = 256 at attempts = 63000
 tracks = 256 at attempts = 64000
 tracks = 256 at attempts = 65000
 tracks = 256 at attempts = 66000
 tracks = 256 at attempts = 67000
 tracks = 256 at attempts = 68000
 tracks = 256 at attempts = 69000
 tracks = 256 at attempts = 70000
 tracks = 256 at attempts = 71000
 tracks = 256 at attempts = 72000
 tracks = 256 at attempts = 73000
 tracks = 256 at attempts = 74000
 tracks = 256 at attempts = 75000
 tracks = 256 at attempts = 76000
 tracks = 256 at attempts = 77000
 tracks = 256 at attempts = 78000
 tracks = 256 at attempts = 79000
 tracks = 256 at attempts = 80000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 81760
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:29   Its length is:79680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  315
 tracks = 293 at attempts =  1000
 tracks = 285 at attempts =  2000
 tracks = 282 at attempts =  3000
 tracks = 276 at attempts =  4000
 tracks = 271 at attempts =  5000
 tracks = 270 at attempts =  6000
 tracks = 267 at attempts =  7000
 tracks = 267 at attempts =  8000
 tracks = 267 at attempts =  9000
 tracks = 267 at attempts = 10000
 tracks = 266 at attempts = 11000
 tracks = 266 at attempts = 12000
 tracks = 266 at attempts = 13000
 tracks = 263 at attempts = 14000
 tracks = 263 at attempts = 15000
 tracks = 263 at attempts = 16000
 tracks = 263 at attempts = 17000
 tracks = 263 at attempts = 18000
 tracks = 263 at attempts = 19000
 tracks = 263 at attempts = 20000
 tracks = 262 at attempts = 21000
 tracks = 262 at attempts = 22000
 tracks = 262 at attempts = 23000
 tracks = 262 at attempts = 24000
 tracks = 262 at attempts = 25000
 tracks = 262 at attempts = 26000
 tracks = 262 at attempts = 27000
 tracks = 262 at attempts = 28000
 tracks = 261 at attempts = 29000
 tracks = 261 at attempts = 30000
 tracks = 261 at attempts = 31000
 tracks = 261 at attempts = 32000
 tracks = 261 at attempts = 33000
 tracks = 261 at attempts = 34000
 tracks = 261 at attempts = 35000
 tracks = 261 at attempts = 36000
 tracks = 261 at attempts = 37000
 tracks = 261 at attempts = 38000
 tracks = 261 at attempts = 39000
 tracks = 261 at attempts = 40000
 tracks = 261 at attempts = 41000
 tracks = 261 at attempts = 42000
 tracks = 261 at attempts = 43000
 tracks = 261 at attempts = 44000
 tracks = 261 at attempts = 45000
 tracks = 261 at attempts = 46000
 tracks = 261 at attempts = 47000
 tracks = 261 at attempts = 48000
 tracks = 261 at attempts = 49000
 tracks = 261 at attempts = 50000
 tracks = 261 at attempts = 51000
 tracks = 261 at attempts = 52000
 tracks = 261 at attempts = 53000
 tracks = 261 at attempts = 54000
 tracks = 261 at attempts = 55000
 tracks = 261 at attempts = 56000
 tracks = 261 at attempts = 57000
 tracks = 261 at attempts = 58000
 tracks = 261 at attempts = 59000
 tracks = 261 at attempts = 60000
 tracks = 261 at attempts = 61000
 tracks = 261 at attempts = 62000
 tracks = 261 at attempts = 63000
 tracks = 261 at attempts = 64000
 tracks = 261 at attempts = 65000
 tracks = 261 at attempts = 66000
 tracks = 261 at attempts = 67000
 tracks = 261 at attempts = 68000
 tracks = 261 at attempts = 69000
 tracks = 261 at attempts = 70000
 tracks = 261 at attempts = 71000
 tracks = 261 at attempts = 72000
 tracks = 261 at attempts = 73000
 tracks = 261 at attempts = 74000
 tracks = 261 at attempts = 75000
 tracks = 261 at attempts = 76000
 tracks = 261 at attempts = 77000
 tracks = 261 at attempts = 78000
 tracks = 261 at attempts = 79000
 tracks = 261 at attempts = 80000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 81760
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:29   Its length is:79680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  339
 tracks = 337 at attempts =  1000
 tracks = 336 at attempts =  2000
 tracks = 336 at attempts =  3000
 tracks = 336 at attempts =  4000
 tracks = 335 at attempts =  5000
 tracks = 335 at attempts =  6000
 tracks = 335 at attempts =  7000
 tracks = 335 at attempts =  8000
 tracks = 335 at attempts =  9000
 tracks = 335 at attempts = 10000
 tracks = 335 at attempts = 11000
 tracks = 335 at attempts = 12000
 tracks = 335 at attempts = 13000
 tracks = 335 at attempts = 14000
 tracks = 335 at attempts = 15000
 tracks = 335 at attempts = 16000
 tracks = 335 at attempts = 17000
 tracks = 335 at attempts = 18000
 tracks = 335 at attempts = 19000
 tracks = 335 at attempts = 20000
 tracks = 335 at attempts = 21000
 tracks = 335 at attempts = 22000
 tracks = 335 at attempts = 23000
 tracks = 335 at attempts = 24000
 tracks = 335 at attempts = 25000
 tracks = 335 at attempts = 26000
 tracks = 335 at attempts = 27000
 tracks = 335 at attempts = 28000
 tracks = 335 at attempts = 29000
 tracks = 335 at attempts = 30000
 tracks = 335 at attempts = 31000
 tracks = 335 at attempts = 32000
 tracks = 335 at attempts = 33000
 tracks = 335 at attempts = 34000
 tracks = 335 at attempts = 35000
 tracks = 335 at attempts = 36000
 tracks = 335 at attempts = 37000
 tracks = 335 at attempts = 38000
 tracks = 335 at attempts = 39000
 tracks = 335 at attempts = 40000
 tracks = 335 at attempts = 41000
 tracks = 335 at attempts = 42000
 tracks = 335 at attempts = 43000
 tracks = 335 at attempts = 44000
 tracks = 335 at attempts = 45000
 tracks = 335 at attempts = 46000
 tracks = 335 at attempts = 47000
 tracks = 335 at attempts = 48000
 tracks = 335 at attempts = 49000
 tracks = 335 at attempts = 50000
 tracks = 335 at attempts = 51000
 tracks = 335 at attempts = 52000
 tracks = 335 at attempts = 53000
 tracks = 335 at attempts = 54000
 tracks = 335 at attempts = 55000
 tracks = 335 at attempts = 56000
 tracks = 335 at attempts = 57000
 tracks = 335 at attempts = 58000
 tracks = 335 at attempts = 59000
 tracks = 335 at attempts = 60000
 tracks = 335 at attempts = 61000
 tracks = 335 at attempts = 62000
 tracks = 335 at attempts = 63000
 tracks = 335 at attempts = 64000
 tracks = 335 at attempts = 65000
 tracks = 335 at attempts = 66000
 tracks = 335 at attempts = 67000
 tracks = 335 at attempts = 68000
 tracks = 335 at attempts = 69000
 tracks = 335 at attempts = 70000
 tracks = 335 at attempts = 71000
 tracks = 335 at attempts = 72000
 tracks = 335 at attempts = 73000
 tracks = 335 at attempts = 74000
 tracks = 335 at attempts = 75000
 tracks = 335 at attempts = 76000
 tracks = 335 at attempts = 77000
 tracks = 335 at attempts = 78000
 tracks = 335 at attempts = 79000
 tracks = 335 at attempts = 80000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 81760
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:29   Its length is:79680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  305
 tracks = 300 at attempts =  1000
 tracks = 287 at attempts =  2000
 tracks = 284 at attempts =  3000
 tracks = 280 at attempts =  4000
 tracks = 277 at attempts =  5000
 tracks = 275 at attempts =  6000
 tracks = 272 at attempts =  7000
 tracks = 271 at attempts =  8000
 tracks = 267 at attempts =  9000
 tracks = 265 at attempts = 10000
 tracks = 265 at attempts = 11000
 tracks = 265 at attempts = 12000
 tracks = 265 at attempts = 13000
 tracks = 265 at attempts = 14000
 tracks = 265 at attempts = 15000
 tracks = 265 at attempts = 16000
 tracks = 265 at attempts = 17000
 tracks = 265 at attempts = 18000
 tracks = 264 at attempts = 19000
 tracks = 264 at attempts = 20000
 tracks = 264 at attempts = 21000
 tracks = 264 at attempts = 22000
 tracks = 264 at attempts = 23000
 tracks = 264 at attempts = 24000
 tracks = 264 at attempts = 25000
 tracks = 264 at attempts = 26000
 tracks = 264 at attempts = 27000
 tracks = 264 at attempts = 28000
 tracks = 264 at attempts = 29000
 tracks = 264 at attempts = 30000
 tracks = 264 at attempts = 31000
 tracks = 264 at attempts = 32000
 tracks = 263 at attempts = 33000
 tracks = 262 at attempts = 34000
 tracks = 262 at attempts = 35000
 tracks = 262 at attempts = 36000
 tracks = 262 at attempts = 37000
 tracks = 262 at attempts = 38000
 tracks = 262 at attempts = 39000
 tracks = 262 at attempts = 40000
 tracks = 262 at attempts = 41000
 tracks = 261 at attempts = 42000
 tracks = 261 at attempts = 43000
 tracks = 261 at attempts = 44000
 tracks = 261 at attempts = 45000
 tracks = 261 at attempts = 46000
 tracks = 261 at attempts = 47000
 tracks = 261 at attempts = 48000
 tracks = 261 at attempts = 49000
 tracks = 261 at attempts = 50000
 tracks = 261 at attempts = 51000
 tracks = 261 at attempts = 52000
 tracks = 261 at attempts = 53000
 tracks = 261 at attempts = 54000
 tracks = 261 at attempts = 55000
 tracks = 261 at attempts = 56000
 tracks = 261 at attempts = 57000
 tracks = 261 at attempts = 58000
 tracks = 261 at attempts = 59000
 tracks = 261 at attempts = 60000
 tracks = 261 at attempts = 61000
 tracks = 261 at attempts = 62000
 tracks = 261 at attempts = 63000
 tracks = 261 at attempts = 64000
 tracks = 261 at attempts = 65000
 tracks = 261 at attempts = 66000
 tracks = 261 at attempts = 67000
 tracks = 261 at attempts = 68000
 tracks = 261 at attempts = 69000
 tracks = 261 at attempts = 70000
 tracks = 261 at attempts = 71000
 tracks = 261 at attempts = 72000
 tracks = 261 at attempts = 73000
 tracks = 261 at attempts = 74000
 tracks = 261 at attempts = 75000
 tracks = 261 at attempts = 76000
 tracks = 261 at attempts = 77000
 tracks = 261 at attempts = 78000
 tracks = 261 at attempts = 79000
 tracks = 261 at attempts = 80000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 81760
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:29   Its length is:79680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  313
 tracks = 297 at attempts =  1000
 tracks = 290 at attempts =  2000
 tracks = 283 at attempts =  3000
 tracks = 277 at attempts =  4000
 tracks = 273 at attempts =  5000
 tracks = 272 at attempts =  6000
 tracks = 270 at attempts =  7000
 tracks = 269 at attempts =  8000
 tracks = 268 at attempts =  9000
 tracks = 268 at attempts = 10000
 tracks = 265 at attempts = 11000
 tracks = 265 at attempts = 12000
 tracks = 264 at attempts = 13000
 tracks = 264 at attempts = 14000
 tracks = 264 at attempts = 15000
 tracks = 264 at attempts = 16000
 tracks = 264 at attempts = 17000
 tracks = 264 at attempts = 18000
 tracks = 264 at attempts = 19000
 tracks = 264 at attempts = 20000
 tracks = 264 at attempts = 21000
 tracks = 264 at attempts = 22000
 tracks = 264 at attempts = 23000
 tracks = 264 at attempts = 24000
 tracks = 264 at attempts = 25000
 tracks = 264 at attempts = 26000
 tracks = 264 at attempts = 27000
 tracks = 264 at attempts = 28000
 tracks = 264 at attempts = 29000
 tracks = 264 at attempts = 30000
 tracks = 264 at attempts = 31000
 tracks = 264 at attempts = 32000
 tracks = 264 at attempts = 33000
 tracks = 264 at attempts = 34000
 tracks = 264 at attempts = 35000
 tracks = 264 at attempts = 36000
 tracks = 264 at attempts = 37000
 tracks = 264 at attempts = 38000
 tracks = 263 at attempts = 39000
 tracks = 263 at attempts = 40000
 tracks = 263 at attempts = 41000
 tracks = 263 at attempts = 42000
 tracks = 263 at attempts = 43000
 tracks = 262 at attempts = 44000
 tracks = 262 at attempts = 45000
 tracks = 262 at attempts = 46000
 tracks = 262 at attempts = 47000
 tracks = 262 at attempts = 48000
 tracks = 262 at attempts = 49000
 tracks = 262 at attempts = 50000
 tracks = 262 at attempts = 51000
 tracks = 262 at attempts = 52000
 tracks = 262 at attempts = 53000
 tracks = 262 at attempts = 54000
 tracks = 262 at attempts = 55000
 tracks = 262 at attempts = 56000
 tracks = 262 at attempts = 57000
 tracks = 262 at attempts = 58000
 tracks = 262 at attempts = 59000
 tracks = 262 at attempts = 60000
 tracks = 262 at attempts = 61000
 tracks = 262 at attempts = 62000
 tracks = 262 at attempts = 63000
 tracks = 262 at attempts = 64000
 tracks = 262 at attempts = 65000
 tracks = 262 at attempts = 66000
 tracks = 262 at attempts = 67000
 tracks = 262 at attempts = 68000
 tracks = 262 at attempts = 69000
 tracks = 261 at attempts = 70000
 tracks = 261 at attempts = 71000
 tracks = 261 at attempts = 72000
 tracks = 261 at attempts = 73000
 tracks = 261 at attempts = 74000
 tracks = 261 at attempts = 75000
 tracks = 261 at attempts = 76000
 tracks = 261 at attempts = 77000
 tracks = 261 at attempts = 78000
 tracks = 261 at attempts = 79000
 tracks = 261 at attempts = 80000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 81760
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:29   Its length is:79680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  307
 tracks = 292 at attempts =  1000
 tracks = 285 at attempts =  2000
 tracks = 281 at attempts =  3000
 tracks = 278 at attempts =  4000
 tracks = 276 at attempts =  5000
 tracks = 272 at attempts =  6000
 tracks = 270 at attempts =  7000
 tracks = 270 at attempts =  8000
 tracks = 269 at attempts =  9000
 tracks = 268 at attempts = 10000
 tracks = 268 at attempts = 11000
 tracks = 268 at attempts = 12000
 tracks = 265 at attempts = 13000
 tracks = 265 at attempts = 14000
 tracks = 265 at attempts = 15000
 tracks = 264 at attempts = 16000
 tracks = 264 at attempts = 17000
 tracks = 264 at attempts = 18000
 tracks = 264 at attempts = 19000
 tracks = 264 at attempts = 20000
 tracks = 264 at attempts = 21000
 tracks = 264 at attempts = 22000
 tracks = 264 at attempts = 23000
 tracks = 264 at attempts = 24000
 tracks = 263 at attempts = 25000
 tracks = 263 at attempts = 26000
 tracks = 263 at attempts = 27000
 tracks = 263 at attempts = 28000
 tracks = 263 at attempts = 29000
 tracks = 263 at attempts = 30000
 tracks = 263 at attempts = 31000
 tracks = 262 at attempts = 32000
 tracks = 262 at attempts = 33000
 tracks = 262 at attempts = 34000
 tracks = 262 at attempts = 35000
 tracks = 262 at attempts = 36000
 tracks = 262 at attempts = 37000
 tracks = 262 at attempts = 38000
 tracks = 262 at attempts = 39000
 tracks = 262 at attempts = 40000
 tracks = 262 at attempts = 41000
 tracks = 262 at attempts = 42000
 tracks = 262 at attempts = 43000
 tracks = 262 at attempts = 44000
 tracks = 262 at attempts = 45000
 tracks = 262 at attempts = 46000
 tracks = 262 at attempts = 47000
 tracks = 262 at attempts = 48000
 tracks = 262 at attempts = 49000
 tracks = 262 at attempts = 50000
 tracks = 262 at attempts = 51000
 tracks = 262 at attempts = 52000
 tracks = 262 at attempts = 53000
 tracks = 262 at attempts = 54000
 tracks = 262 at attempts = 55000
 tracks = 262 at attempts = 56000
 tracks = 262 at attempts = 57000
 tracks = 262 at attempts = 58000
 tracks = 262 at attempts = 59000
 tracks = 262 at attempts = 60000
 tracks = 262 at attempts = 61000
 tracks = 262 at attempts = 62000
 tracks = 262 at attempts = 63000
 tracks = 262 at attempts = 64000
 tracks = 262 at attempts = 65000
 tracks = 262 at attempts = 66000
 tracks = 262 at attempts = 67000
 tracks = 262 at attempts = 68000
 tracks = 262 at attempts = 69000
 tracks = 262 at attempts = 70000
 tracks = 262 at attempts = 71000
 tracks = 262 at attempts = 72000
 tracks = 262 at attempts = 73000
 tracks = 262 at attempts = 74000
 tracks = 262 at attempts = 75000
 tracks = 262 at attempts = 76000
 tracks = 262 at attempts = 77000
 tracks = 262 at attempts = 78000
 tracks = 262 at attempts = 79000
 tracks = 262 at attempts = 80000
 removing redundant feed-through pins
 the connectivity of all the nets is verified

 block left edge is at -399
 the longest block length is 81760
 building the steiner trees
 rebuilding the steiner tree

----start doing coarse global routing ------ 
 ITERATION  1

  longest Row is:29   Its length is:79680
 doing feed-through pins assignment
 building the net-tree now !
 set up the global routing grids
 the starting value of tracks =  342
 tracks = 340 at attempts =  1000
 tracks = 339 at attempts =  2000
 tracks = 339 at attempts =  3000
 tracks = 339 at attempts =  4000
 tracks = 338 at attempts =  5000
 tracks = 338 at attempts =  6000
 tracks = 338 at attempts =  7000
 tracks = 338 at attempts =  8000
 tracks = 338 at attempts =  9000
 tracks = 337 at attempts = 10000
 tracks = 337 at attempts = 11000
 tracks = 337 at attempts = 12000
 tracks = 337 at attempts = 13000
 tracks = 337 at attempts = 14000
 tracks = 337 at attempts = 15000
 tracks = 337 at attempts = 16000
 tracks = 337 at attempts = 17000
 tracks = 337 at attempts = 18000
 tracks = 337 at attempts = 19000
 tracks = 337 at attempts = 20000
 tracks = 337 at attempts = 21000
 tracks = 337 at attempts = 22000
 tracks = 337 at attempts = 23000
 tracks = 337 at attempts = 24000
 tracks = 337 at attempts = 25000
 tracks = 337 at attempts = 26000
 tracks = 337 at attempts = 27000
 tracks = 337 at attempts = 28000
 tracks = 337 at attempts = 29000
 tracks = 337 at attempts = 30000
 tracks = 337 at attempts = 31000
 tracks = 337 at attempts = 32000
 tracks = 337 at attempts = 33000
 tracks = 337 at attempts = 34000
 tracks = 337 at attempts = 35000
 tracks = 337 at attempts = 36000
 tracks = 337 at attempts = 37000
 tracks = 337 at attempts = 38000
 tracks = 337 at attempts = 39000
 tracks = 337 at attempts = 40000
 tracks = 337 at attempts = 41000
 tracks = 337 at attempts = 42000
 tracks = 337 at attempts = 43000
 tracks = 337 at attempts = 44000
 tracks = 337 at attempts = 45000
 tracks = 337 at attempts = 46000
 tracks = 337 at attempts = 47000
 tracks = 337 at attempts = 48000
 tracks = 337 at attempts = 49000
 tracks = 337 at attempts = 50000
 tracks = 337 at attempts = 51000
 tracks = 337 at attempts = 52000
 tracks = 337 at attempts = 53000
 tracks = 337 at attempts = 54000
 tracks = 337 at attempts = 55000
 tracks = 337 at attempts = 56000
 tracks = 337 at attempts = 57000
 tracks = 337 at attempts = 58000
 tracks = 337 at attempts = 59000
 tracks = 337 at attempts = 60000
 tracks = 337 at attempts = 61000
 tracks = 337 at attempts = 62000
 tracks = 337 at attempts = 63000
 tracks = 337 at attempts = 64000
 tracks = 337 at attempts = 65000
 tracks = 337 at attempts = 66000
 tracks = 337 at attempts = 67000
 tracks = 337 at attempts = 68000
 tracks = 337 at attempts = 69000
 tracks = 337 at attempts = 70000
 tracks = 337 at attempts = 71000
 tracks = 337 at attempts = 72000
 tracks = 337 at attempts = 73000
 tracks = 337 at attempts = 74000
 tracks = 337 at attempts = 75000
 tracks = 337 at attempts = 76000
 tracks = 337 at attempts = 77000
 tracks = 337 at attempts = 78000
 tracks = 337 at attempts = 79000
 tracks = 337 at attempts = 80000
 removing redundant feed-through pins
 the connectivity of all the nets is verified


***********************************************
*ACTUAL* FINAL NUMBER OF ROUTING TRACKS: 256
***********************************************


TimberWolfSC terminated normally with no errors and 0 warning[s]


twflow terminated normally with no errors and 0 warning[s]

Running getfillcell to determine cell to use for fill.
getfillcell.tcl mkLdpcCore  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef FILL
Using cell FILL for fill
Running place2def to translate graywolf output to DEF format.
place2def.tcl mkLdpcCore FILL 
Running place2def.tcl
DEF database: 100 units per micron
Limits: xbot = -399 ybot = -200 xtop = 79630.0 ytop = 58130.0
Core values: 80.0 100 79760.0 58100
Offsets: 80.0 100
4 routing layers
292 horizontal tracks from 0.0 to 58400.0 step 200 (M1, M3, ...)
501 vertical tracks from 0.0 to 80160.0 step 160.0 (M2, M4, ...)
Summary: Total components = 3220
  Fill cells  = 0
  Other cells = 3220
Done with place2def.tcl
Running addspacers to generate power stripes and align cell right edge
addspacers.tcl  -stripe 5.0 150.0 PG mkLdpcCore  /usr/local/share/qflow/tech/osu035/osu035_stdcells.lef FILL
Reading FILL macros from LEF file.
Reading DEF file mkLdpcCore.def. . .
Number of rows is 29
Longest row has width 797.6 um
addspacers:  Inserting 4 stripes of width 4.8 um (5.0 um requested)
  Pitch 148.8 um, offset 174.4 um
stretch:  Number of components is 3622
Analysis of DEF file:
Number of components = 3220
New number of components = 3622
Number of rows = 29
Adjusting obstructions for power striping
Done with addspacers.tcl
Running arrangepins to adjust pin positions for optimal routing.
arrangepins.tcl  mkLdpcCore
Reading info file mkLdpcCore.info. . .
Reading DEF file mkLdpcCore.def. . .
Recalculating pin positions
Writing DEF file mkLdpcCore_mod.def. . .
Done with arrangepins.tcl
blifanno.tcl /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore.blif mkLdpcCore.def /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore_anno.blif
Running blifanno.tcl
Reading DEF file mkLdpcCore.def. . .
Done with blifanno.tcl

Generating RTL verilog and SPICE netlist file in directory
   /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis
Files:
   Verilog: /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore.rtl.v
   Verilog: /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore.rtlnopwr.v
   Verilog: /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore.rtlbb.v
   Spice:   /home/nirajns/work/courses/EE705/ee705-ldpc/qflow-035/synthesis/mkLdpcCore.spc

Running blif2Verilog.
Running blif2BSpice.
Placement script ended on Thu May 2 17:26:15 IST 2019
