{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.17134}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 LIBRARY ieee;\par
USE ieee.std_logic_1164.all;\par
\par
entity d_ff is\par
  port (\par
    d, clk : in BIT;\par
    q : out BIT\par
  );\par
end d_ff;\par
\par
architecture behave_dff of d_ff is\par
  component std_latch\par
    port (d, g, q: inout BIT);\par
  end component;\par
  component std_inv\par
    port (a, y: inout BIT);\par
  end component;\par
  signal clkbar, q1 : BIT;\par
begin\par
  std_inv_0 : std_inv   port map (clk, clkbar);\par
  std_latch1: std_latch port map (d,   clkbar, q1);\par
  std_latch2: std_latch port map (q1,  clk,    q);\par
end behave_dff;\par
\par
entity buf1 is\par
port(a: in std_logic;\par
y: out std_logic);\par
end buf1;\par
Architecture arch of buf1 is\par
component std_inv\par
port(a :in std_logic;\par
y: out std_logic);\par
end component;\par
signal z : std_logic;\par
begin\par
s1:std_inv port map(a,z);\par
s:std_inv port map(z,y);\par
end arch;\par
\par
\par
ENTITY FIFO2_1 IS\par
    PORT (\par
        CLK : IN std_logic;\tab\par
        RST : IN std_logic;\tab\par
        D_IN : IN std_logic;\tab\par
        ENQ : IN std_logic;\tab\par
        FULL_N : OUT std_logic;\tab\par
        D_OUT : OUT std_logic;\tab\par
        DEQ : IN std_logic;\tab\par
        EMPTY_N : OUT std_logic;\tab\par
        CLR : IN std_logic);\tab\par
END FIFO2_1;\par
\par
\par
\par
\par
ARCHITECTURE VeriArch3 OF FIFO2_1 IS\par
\par
   component std_inv\par
      port(a : in std_logic;\par
           y : out std_logic);\par
   end component;\par
\par
   component std_nand2\par
      port(a,b : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nand3\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nor2\par
      port(a,b : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nor3\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_aoi\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component d_ff\par
      port(clk: in std_logic; d : in std_logic;\par
           q : out std_logic);\par
   end component;\par
    \par
   component buf1 port (A : in std_logic; Y : out std_logic); end component;\par
\par
    SIGNAL ag_00 : std_logic;\tab\par
\par
    SIGNAL ag_01 : std_logic;\tab\par
\par
    SIGNAL ag_02 : std_logic;\tab\par
\par
    SIGNAL ag_03 : std_logic;\tab\par
\par
    SIGNAL ag_04 : std_logic;\tab\par
\par
    SIGNAL ag_05 : std_logic;\tab\par
\par
    SIGNAL ag_06 : std_logic;\tab\par
\par
    SIGNAL ag_07 : std_logic;\tab\par
\par
    SIGNAL ag_08 : std_logic;\tab\par
\par
    SIGNAL ag_09 : std_logic;\tab\par
\par
    SIGNAL ag_10 : std_logic;\tab\par
\par
    SIGNAL ag_11 : std_logic;\tab\par
\par
    SIGNAL ag_12 : std_logic;\tab\par
\par
    SIGNAL ag_13 : std_logic;\tab\par
\par
    SIGNAL ag_14 : std_logic;\tab\par
\par
    SIGNAL ag_15 : std_logic;\tab\par
\par
    SIGNAL ag_16 : std_logic;\tab\par
\par
    SIGNAL ag_17 : std_logic;\tab\par
\par
    SIGNAL ag_18 : std_logic;\tab\par
\par
    SIGNAL ag_19 : std_logic;\tab\par
\par
    SIGNAL ag_20 : std_logic;\tab\par
\par
    SIGNAL ag_21 : std_logic;\tab\par
\par
    SIGNAL ag_22 : std_logic;\tab\par
\par
    SIGNAL ag_23 : std_logic;\tab\par
\par
    SIGNAL ag_24 : std_logic;\tab\par
\par
    SIGNAL ag_25 : std_logic;\tab\par
\par
    SIGNAL ag_26 : std_logic;\tab\par
\par
    SIGNAL ag_27 : std_logic;\tab\par
\par
    SIGNAL ag_28 : std_logic;\tab\par
\par
    SIGNAL ag_29 : std_logic;\tab\par
\par
    SIGNAL ag_30 : std_logic;\tab\par
\par
    SIGNAL ag_31 : std_logic;\tab\par
    SIGNAL V2V_D_OUT : std_logic;\tab\par
    SIGNAL V2V_EMPTY_N : std_logic;\tab\par
    SIGNAL V2V_FULL_N : std_logic;\tab\par
\par
    SIGNAL data0_reg : std_logic;\tab\par
\par
    SIGNAL data1_reg : std_logic;\tab\par
\par
    SIGNAL empty_reg : std_logic;\tab\par
\par
    SIGNAL full_reg : std_logic;\tab\par
BEGIN\par
    nbuf_1 : buf1 port map (Y => V2V_D_OUT, A => data0_reg);\tab\par
    nbuf_2 : buf1 port map (Y => V2V_EMPTY_N, A => empty_reg);\tab\par
    nbuf_3 : buf1 port map (Y => V2V_FULL_N, A => full_reg);\tab\par
    nbuf_4 : buf1 port map (Y => FULL_N, A => V2V_FULL_N);\tab\par
    nbuf_5 : buf1 port map (Y => D_OUT, A => V2V_D_OUT);\tab\par
    nbuf_6 : buf1 port map (Y => EMPTY_N, A => V2V_EMPTY_N);\tab\par
\par
    ag_32 : std_inv\par
    PORT MAP (\par
        a => RST,\par
        y => ag_04);\tab\par
\par
\par
    ag_33 : std_nor2\par
    PORT MAP (\par
        a => CLR,\par
        b => ag_04,\par
        y => ag_05);\tab\par
\par
\par
    ag_34 : std_inv\par
    PORT MAP (\par
        a => full_reg,\par
        y => ag_06);\tab\par
\par
\par
    ag_35 : std_inv\par
    PORT MAP (\par
        a => DEQ,\par
        y => ag_07);\tab\par
\par
\par
    ag_36 : std_nand2\par
    PORT MAP (\par
        a => ag_07,\par
        b => ENQ,\par
        y => ag_08);\tab\par
\par
\par
    ag_37 : std_inv\par
    PORT MAP (\par
        a => ENQ,\par
        y => ag_09);\tab\par
\par
\par
    ag_38 : std_nand2\par
    PORT MAP (\par
        a => DEQ,\par
        b => ag_09,\par
        y => ag_10);\tab\par
\par
\par
    ag_39 : std_nand3\par
    PORT MAP (\par
        a => ag_10,\par
        b => ag_08,\par
        c => ag_06,\par
        y => ag_11);\tab\par
\par
\par
    ag_40 : std_nor2\par
    PORT MAP (\par
        a => DEQ,\par
        b => ag_09,\par
        y => ag_12);\tab\par
\par
\par
    ag_41 : std_nand2\par
    PORT MAP (\par
        a => ag_12,\par
        b => empty_reg,\par
        y => ag_13);\tab\par
\par
\par
    ag_42 : std_nand2\par
    PORT MAP (\par
        a => ag_13,\par
        b => ag_11,\par
        y => ag_14);\tab\par
\par
\par
    ag_43 : std_nand2\par
    PORT MAP (\par
        a => ag_14,\par
        b => ag_05,\par
        y => ag_03);\tab\par
\par
\par
    ag_44 : std_nand2\par
    PORT MAP (\par
        a => ag_10,\par
        b => ag_08,\par
        y => ag_15);\tab\par
\par
\par
    ag_45 : std_nor2\par
    PORT MAP (\par
        a => ag_15,\par
        b => empty_reg,\par
        y => ag_16);\tab\par
\par
\par
    ag_46 : std_nor2\par
    PORT MAP (\par
        a => ag_07,\par
        b => ENQ,\par
        y => ag_17);\tab\par
\par
\par
    ag_47 : std_nand2\par
    PORT MAP (\par
        a => ag_17,\par
        b => full_reg,\par
        y => ag_18);\tab\par
\par
\par
    ag_48 : std_nand2\par
    PORT MAP (\par
        a => ag_18,\par
        b => ag_05,\par
        y => ag_19);\tab\par
\par
\par
    ag_49 : std_nor2\par
    PORT MAP (\par
        a => ag_19,\par
        b => ag_16,\par
        y => ag_02);\tab\par
\par
\par
    ag_50 : std_inv\par
    PORT MAP (\par
        a => data1_reg,\par
        y => ag_20);\tab\par
\par
\par
    ag_51 : std_nand2\par
    PORT MAP (\par
        a => ENQ,\par
        b => empty_reg,\par
        y => ag_21);\tab\par
\par
\par
    ag_52 : std_nor2\par
    PORT MAP (\par
        a => ag_21,\par
        b => D_IN,\par
        y => ag_22);\tab\par
\par
\par
    ag_53 : std_aoi\par
    PORT MAP (\par
        a => ag_21,\par
        b => ag_20,\par
        c => ag_22,\par
        y => ag_01);\tab\par
\par
\par
    ag_54 : std_nand2\par
    PORT MAP (\par
        a => DEQ,\par
        b => ag_06,\par
        y => ag_23);\tab\par
\par
\par
    ag_55 : std_inv\par
    PORT MAP (\par
        a => data0_reg,\par
        y => ag_24);\tab\par
\par
\par
    ag_56 : std_aoi\par
    PORT MAP (\par
        a => ag_07,\par
        b => empty_reg,\par
        c => ag_09,\par
        y => ag_25);\tab\par
\par
\par
    ag_57 : std_nor2\par
    PORT MAP (\par
        a => ag_25,\par
        b => ag_24,\par
        y => ag_26);\tab\par
\par
\par
    ag_58 : std_nand2\par
    PORT MAP (\par
        a => ag_26,\par
        b => ag_23,\par
        y => ag_27);\tab\par
\par
\par
    ag_59 : std_nor2\par
    PORT MAP (\par
        a => ag_07,\par
        b => full_reg,\par
        y => ag_28);\tab\par
\par
\par
    ag_60 : std_nand2\par
    PORT MAP (\par
        a => ag_28,\par
        b => data1_reg,\par
        y => ag_29);\tab\par
\par
\par
    ag_61 : std_nand2\par
    PORT MAP (\par
        a => ag_06,\par
        b => empty_reg,\par
        y => ag_30);\tab\par
\par
\par
    ag_62 : std_nand3\par
    PORT MAP (\par
        a => ag_30,\par
        b => ag_25,\par
        c => D_IN,\par
        y => ag_31);\tab\par
\par
\par
    ag_63 : std_nand3\par
    PORT MAP (\par
        a => ag_31,\par
        b => ag_29,\par
        c => ag_27,\par
        y => ag_00);\tab\par
\par
\par
    ag_64 : d_ff\par
    PORT MAP (\par
        clk => CLK,\par
        d => ag_02,\par
        q => empty_reg);\tab\par
\par
\par
    ag_65 : d_ff\par
    PORT MAP (\par
        clk => CLK,\par
        d => ag_03,\par
        q => full_reg);\tab\par
\par
\par
    ag_66 : d_ff\par
    PORT MAP (\par
        clk => CLK,\par
        d => ag_01,\par
        q => data1_reg);\tab\par
\par
\par
    ag_67 : d_ff\par
    PORT MAP (\par
        clk => CLK,\par
        d => ag_00,\par
        q => data0_reg);\tab\par
\par
END VeriArch3;\par
\par
\par
\par
LIBRARY ieee;\par
USE ieee.std_logic_1164.all;\par
\par
ENTITY module_fnChkNodeCore IS\tab -- \par
    PORT (\par
        sfnChkNodeCore_i_0 : IN std_logic;\tab\par
        sfnChkNodeCore_i_1 : IN std_logic;\tab\par
        sfnChkNodeCore_i_2 : IN std_logic;\tab\par
        sfnChkNodeCore_0 : OUT std_logic;\tab\par
        sfnChkNodeCore_1 : OUT std_logic;\tab\par
        sfnChkNodeCore_2 : OUT std_logic);\tab\par
END module_fnChkNodeCore;\par
\par
\par
\par
\par
ARCHITECTURE VeriArch1 OF module_fnChkNodeCore IS\par
\par
   component std_inv\par
      port(a : in std_logic;\par
           y : out std_logic);\par
   end component;\par
\par
   component std_nand2\par
      port(a,b : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nand3\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nor2\par
      port(a,b : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nor3\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_aoi\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_latch\par
      port(d, g : in std_logic;\par
           q : out std_logic);\par
   end component;\par
    \par
   component buf1 port (A : in std_logic; Y : out std_logic); end component;\par
\par
    SIGNAL ag_00 : std_logic;\tab\par
\par
    SIGNAL ag_01 : std_logic;\tab\par
\par
    SIGNAL ag_02 : std_logic;\tab\par
\par
    SIGNAL ag_03 : std_logic;\tab\par
\par
    SIGNAL ag_04 : std_logic;\tab\par
\par
    SIGNAL ag_05 : std_logic;\tab\par
\par
    SIGNAL ag_06 : std_logic;\tab\par
\par
    SIGNAL ag_07 : std_logic;\tab\par
\par
    SIGNAL ag_08 : std_logic;\tab\par
-- Intermediate signal for sfnChkNodeCore_0\par
    SIGNAL V2V_sfnChkNodeCore_0 : std_logic;\tab\par
-- Intermediate signal for sfnChkNodeCore_1\par
    SIGNAL V2V_sfnChkNodeCore_1 : std_logic;\tab\par
-- Intermediate signal for sfnChkNodeCore_2\par
    SIGNAL V2V_sfnChkNodeCore_2 : std_logic;\tab\par
BEGIN\par
    nbuf_1 : buf1 port map (Y => sfnChkNodeCore_0, A => V2V_sfnChkNodeCore_0);\tab\par
    nbuf_2 : buf1 port map (Y => sfnChkNodeCore_1, A => V2V_sfnChkNodeCore_1);\tab\par
    nbuf_3 : buf1 port map (Y => sfnChkNodeCore_2, A => V2V_sfnChkNodeCore_2);\tab\par
\par
    ag_09 : std_inv\par
    PORT MAP (\par
        a => sfnChkNodeCore_i_2,\par
        y => ag_06);\tab\par
\par
\par
    ag_10 : std_nand2\par
    PORT MAP (\par
        a => ag_06,\par
        b => sfnChkNodeCore_i_1,\par
        y => ag_07);\tab\par
\par
\par
    ag_11 : std_inv\par
    PORT MAP (\par
        a => sfnChkNodeCore_i_1,\par
        y => ag_08);\tab\par
\par
\par
    ag_12 : std_nand2\par
    PORT MAP (\par
        a => sfnChkNodeCore_i_2,\par
        b => ag_08,\par
        y => ag_00);\tab\par
\par
\par
    ag_13 : std_nand2\par
    PORT MAP (\par
        a => ag_00,\par
        b => ag_07,\par
        y => V2V_sfnChkNodeCore_0);\tab\par
\par
\par
    ag_14 : std_inv\par
    PORT MAP (\par
        a => sfnChkNodeCore_i_0,\par
        y => ag_01);\tab\par
\par
\par
    ag_15 : std_nand2\par
    PORT MAP (\par
        a => ag_01,\par
        b => sfnChkNodeCore_i_2,\par
        y => ag_02);\tab\par
\par
\par
    ag_16 : std_nand2\par
    PORT MAP (\par
        a => sfnChkNodeCore_i_0,\par
        b => ag_06,\par
        y => ag_03);\tab\par
\par
\par
    ag_17 : std_nand2\par
    PORT MAP (\par
        a => ag_03,\par
        b => ag_02,\par
        y => V2V_sfnChkNodeCore_1);\tab\par
\par
\par
    ag_18 : std_nand2\par
    PORT MAP (\par
        a => ag_01,\par
        b => sfnChkNodeCore_i_1,\par
        y => ag_04);\tab\par
\par
\par
    ag_19 : std_nand2\par
    PORT MAP (\par
        a => sfnChkNodeCore_i_0,\par
        b => ag_08,\par
        y => ag_05);\tab\par
\par
\par
    ag_20 : std_nand2\par
    PORT MAP (\par
        a => ag_05,\par
        b => ag_04,\par
        y => V2V_sfnChkNodeCore_2);\tab\par
\par
END VeriArch1;\par
\par
\par
\par
LIBRARY ieee;\par
USE ieee.std_logic_1164.all;\par
\par
ENTITY mkChkNodeCtrl IS\tab -- \par
    PORT (\par
        B2C_0_DEQ : OUT std_logic;\tab\par
        B2C_0_EMPTY_N : IN std_logic;\tab\par
        B2C_0_FULL_N : IN std_logic;\tab\par
        B2C_1_DEQ : OUT std_logic;\tab\par
        B2C_1_EMPTY_N : IN std_logic;\tab\par
        B2C_1_FULL_N : IN std_logic;\tab\par
        B2C_2_DEQ : OUT std_logic;\tab\par
        B2C_2_EMPTY_N : IN std_logic;\tab\par
        B2C_2_FULL_N : IN std_logic;\tab\par
        C2B_0_EMPTY_N : IN std_logic;\tab\par
        C2B_0_FULL_N : IN std_logic;\tab\par
        C2B_1_EMPTY_N : IN std_logic;\tab\par
        C2B_1_FULL_N : IN std_logic;\tab\par
        C2B_2_EMPTY_N : IN std_logic;\tab\par
        C2B_2_FULL_N : IN std_logic;\tab\par
        C2B_0_ENQ : OUT std_logic;\tab\par
        C2B_1_ENQ : OUT std_logic;\tab\par
        C2B_2_ENQ : OUT std_logic);\tab\par
END mkChkNodeCtrl;\par
\par
\par
\par
\par
ARCHITECTURE VeriArch2 OF mkChkNodeCtrl IS\par
\par
   component std_inv\par
      port(a : in std_logic;\par
           y : out std_logic);\par
   end component;\par
\par
   component std_nand2\par
      port(a,b : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nand3\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nor2\par
      port(a,b : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_nor3\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_aoi\par
      port(a,b,c : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
   component std_latch\par
      port(d, g : in std_logic;\par
           q : out std_logic);\par
   end component;\par
    \par
   component buf1 port (A : in std_logic; Y : out std_logic); end component;\par
\par
    SIGNAL ag_0 : std_logic;\tab\par
\par
    SIGNAL ag_1 : std_logic;\tab\par
\par
    SIGNAL ag_2 : std_logic;\tab\par
-- Intermediate signal for B2C_0_DEQ\par
    SIGNAL V2V_B2C_0_DEQ : std_logic;\tab\par
-- Intermediate signal for B2C_1_DEQ\par
    SIGNAL V2V_B2C_1_DEQ : std_logic;\tab\par
-- Intermediate signal for B2C_2_DEQ\par
    SIGNAL V2V_B2C_2_DEQ : std_logic;\tab\par
-- Intermediate signal for C2B_0_ENQ\par
    SIGNAL V2V_C2B_0_ENQ : std_logic;\tab\par
-- Intermediate signal for C2B_1_ENQ\par
    SIGNAL V2V_C2B_1_ENQ : std_logic;\tab\par
-- Intermediate signal for C2B_2_ENQ\par
    SIGNAL V2V_C2B_2_ENQ : std_logic;\tab\par
\par
    SIGNAL CAN_FIRE_RL_rlProcessIteration : std_logic;\tab\par
BEGIN\par
    nbuf_1 : buf1 port map (Y => V2V_B2C_1_DEQ, A => V2V_B2C_0_DEQ);\tab\par
    nbuf_2 : buf1 port map (Y => V2V_B2C_2_DEQ, A => V2V_B2C_0_DEQ);\tab\par
    nbuf_3 : buf1 port map (Y => V2V_C2B_0_ENQ, A => V2V_B2C_0_DEQ);\tab\par
    nbuf_4 : buf1 port map (Y => V2V_C2B_1_ENQ, A => V2V_B2C_0_DEQ);\tab\par
    nbuf_5 : buf1 port map (Y => V2V_C2B_2_ENQ, A => V2V_B2C_0_DEQ);\tab\par
    nbuf_6 : buf1 port map (Y => CAN_FIRE_RL_rlProcessIteration, A => V2V_B2C_0_DEQ);\tab\par
    nbuf_7 : buf1 port map (Y => B2C_0_DEQ, A => V2V_B2C_0_DEQ);\tab\par
    nbuf_8 : buf1 port map (Y => B2C_1_DEQ, A => V2V_B2C_1_DEQ);\tab\par
    nbuf_9 : buf1 port map (Y => B2C_2_DEQ, A => V2V_B2C_2_DEQ);\tab\par
    nbuf_10 : buf1 port map (Y => C2B_0_ENQ, A => V2V_C2B_0_ENQ);\tab\par
    nbuf_20 : buf1 port map (Y => C2B_1_ENQ, A => V2V_C2B_1_ENQ);\tab\par
    nbuf_30 : buf1 port map (Y => C2B_2_ENQ, A => V2V_C2B_2_ENQ);\tab\par
\par
    ag_3 : std_nand2\par
    PORT MAP (\par
        a => C2B_0_FULL_N,\par
        b => B2C_2_EMPTY_N,\par
        y => ag_1);\tab\par
\par
\par
    ag_4 : std_nand2\par
    PORT MAP (\par
        a => B2C_0_EMPTY_N,\par
        b => C2B_2_FULL_N,\par
        y => ag_2);\tab\par
\par
\par
    ag_5 : std_nand2\par
    PORT MAP (\par
        a => B2C_1_EMPTY_N,\par
        b => C2B_1_FULL_N,\par
        y => ag_0);\tab\par
\par
\par
    ag_6 : std_nor3\par
    PORT MAP (\par
        a => ag_0,\par
        b => ag_2,\par
        c => ag_1,\par
        y => V2V_B2C_0_DEQ);\tab\par
\par
END VeriArch2;\par
\par
\par
library ieee;\par
use ieee.std_logic_1164.all;\par
use ieee.std_logic_misc.all;\par
use ieee.numeric_std.all;\par
entity mkChkNode is \par
     port (\par
        CLK :  in std_logic;\par
        EN_b2c_0_put :  in std_logic;\par
        EN_b2c_1_put :  in std_logic;\par
        EN_b2c_2_put :  in std_logic;\par
        EN_c2b_0_get :  in std_logic;\par
        EN_c2b_1_get :  in std_logic;\par
        EN_c2b_2_get :  in std_logic;\par
        RDY_b2c_0_put :  out std_logic;\par
        RDY_b2c_1_put :  out std_logic;\par
        RDY_b2c_2_put :  out std_logic;\par
        RDY_c2b_0_get :  out std_logic;\par
        RDY_c2b_1_get :  out std_logic;\par
        RDY_c2b_2_get :  out std_logic;\par
        RST_N :  in std_logic;\par
        b2c_0_put :  in std_logic;\par
        b2c_1_put :  in std_logic;\par
        b2c_2_put :  in std_logic;\par
        c2b_0_get :  out std_logic;\par
        c2b_1_get :  out std_logic;\par
        c2b_2_get :  out std_logic\par
    );\par
end mkChkNode; \par
\par
\par
architecture rtl of mkChkNode is \par
    signal sfnChkNodeCore_d16_0 : std_logic;\par
    signal sfnChkNodeCore_d16_1 : std_logic;\par
    signal sfnChkNodeCore_d16_2 : std_logic;\par
    signal svffB2C_0_DEQ : std_logic;\par
    signal svffB2C_0_D_OUT : std_logic;\par
    signal svffB2C_0_EMPTY_N : std_logic;\par
    signal svffB2C_0_FULL_N : std_logic;\par
    signal svffB2C_1_DEQ : std_logic;\par
    signal svffB2C_1_D_OUT : std_logic;\par
    signal svffB2C_1_EMPTY_N : std_logic;\par
    signal svffB2C_1_FULL_N : std_logic;\par
    signal svffB2C_2_DEQ : std_logic;\par
    signal svffB2C_2_D_OUT : std_logic;\par
    signal svffB2C_2_EMPTY_N : std_logic;\par
    signal svffB2C_2_FULL_N : std_logic;\par
    signal svffC2B_0_D_OUT : std_logic;\par
    signal svffC2B_0_EMPTY_N : std_logic;\par
    signal svffC2B_0_ENQ : std_logic;\par
    signal svffC2B_0_FULL_N : std_logic;\par
    signal svffC2B_1_D_OUT : std_logic;\par
    signal svffC2B_1_EMPTY_N : std_logic;\par
    signal svffC2B_1_ENQ : std_logic;\par
    signal svffC2B_1_FULL_N : std_logic;\par
    signal svffC2B_2_D_OUT : std_logic;\par
    signal svffC2B_2_EMPTY_N : std_logic;\par
    signal svffC2B_2_ENQ : std_logic;\par
    signal svffC2B_2_FULL_N : std_logic;\par
    signal fifo_clr : std_logic;\par
    signal svffB2C_0_DEQb : std_logic;\par
    component mkChkNodeCtrl \par
         port (\par
        B2C_0_DEQ : OUT std_logic;\tab\par
        B2C_0_EMPTY_N : IN std_logic;\tab\par
        B2C_0_FULL_N : IN std_logic;\tab\par
        B2C_1_DEQ : OUT std_logic;\tab\par
        B2C_1_EMPTY_N : IN std_logic;\tab\par
        B2C_1_FULL_N : IN std_logic;\tab\par
        B2C_2_DEQ : OUT std_logic;\tab\par
        B2C_2_EMPTY_N : IN std_logic;\tab\par
        B2C_2_FULL_N : IN std_logic;\tab\par
        C2B_0_EMPTY_N : IN std_logic;\tab\par
        C2B_0_FULL_N : IN std_logic;\tab\par
        C2B_1_EMPTY_N : IN std_logic;\tab\par
        C2B_1_FULL_N : IN std_logic;\tab\par
        C2B_2_EMPTY_N : IN std_logic;\tab\par
        C2B_2_FULL_N : IN std_logic;\tab\par
        C2B_0_ENQ : OUT std_logic;\tab\par
        C2B_1_ENQ : OUT std_logic;\tab\par
        C2B_2_ENQ : OUT std_logic);\tab\par
    end component; \par
    component module_fnChkNodeCore\par
         port (\par
        sfnChkNodeCore_i_0 : IN std_logic;\tab\par
        sfnChkNodeCore_i_1 : IN std_logic;\tab\par
        sfnChkNodeCore_i_2 : IN std_logic;\tab\par
        sfnChkNodeCore_0 : OUT std_logic;\tab\par
        sfnChkNodeCore_1 : OUT std_logic;\tab\par
        sfnChkNodeCore_2 : OUT std_logic);\par
    end component; \par
    component FIFO2_1\par
         port (\par
            CLK :  in std_logic;\par
            CLR :  in std_logic;\par
            DEQ :  in std_logic;\par
            D_IN :  in std_logic;\par
            D_OUT :  out std_logic;\par
            EMPTY_N :  out std_logic;\par
            ENQ :  in std_logic;\par
            FULL_N :  out std_logic;\par
            RST :  in std_logic);\par
    end component; \par
    component buf1 port (A : in std_logic; Y : out std_logic); end component;\par
   component std_inv\par
      port(a : in std_logic;\par
           y : out std_logic);\par
   end component;\par
\par
   component std_nand2\par
      port(a,b : in std_logic;\par
           y : out std_logic);\par
   end component;\par
    \par
    begin \par
        ctrl : mkChkNodeCtrl\par
            port map (\par
                B2C_0_DEQ => svffB2C_0_DEQ,\par
                B2C_0_EMPTY_N => svffB2C_0_EMPTY_N,\par
                B2C_0_FULL_N => svffB2C_0_FULL_N,\par
                B2C_1_DEQ => svffB2C_1_DEQ,\par
                B2C_1_EMPTY_N => svffB2C_1_EMPTY_N,\par
                B2C_1_FULL_N => svffB2C_1_FULL_N,\par
                B2C_2_DEQ => svffB2C_2_DEQ,\par
                B2C_2_EMPTY_N => svffB2C_2_EMPTY_N,\par
                B2C_2_FULL_N => svffB2C_2_FULL_N,\par
                C2B_0_EMPTY_N => svffC2B_0_EMPTY_N,\par
                C2B_0_ENQ => svffC2B_0_ENQ,\par
                C2B_0_FULL_N => svffC2B_0_FULL_N,\par
                C2B_1_EMPTY_N => svffC2B_1_EMPTY_N,\par
                C2B_1_ENQ => svffC2B_1_ENQ,\par
                C2B_1_FULL_N => svffC2B_1_FULL_N,\par
                C2B_2_EMPTY_N => svffC2B_2_EMPTY_N,\par
                C2B_2_ENQ => svffC2B_2_ENQ,\par
                C2B_2_FULL_N => svffC2B_2_FULL_N);\par
        instance_fnChkNodeCore_0 : module_fnChkNodeCore\par
            port map (\par
                sfnChkNodeCore_0 => sfnChkNodeCore_d16_0,\par
                sfnChkNodeCore_1 => sfnChkNodeCore_d16_1,\par
                sfnChkNodeCore_2 => sfnChkNodeCore_d16_2,\par
                sfnChkNodeCore_i_0 => svffB2C_0_D_OUT,\par
                sfnChkNodeCore_i_1 => svffB2C_1_D_OUT,\par
                sfnChkNodeCore_i_2 => svffB2C_2_D_OUT);\par
        vffB2C_0 : FIFO2_1\par
            port map (\par
                CLK => CLK,\par
                CLR => fifo_clr,\par
                DEQ => svffB2C_0_DEQ,\par
                D_IN => b2c_0_put,\par
                D_OUT => svffB2C_0_D_OUT,\par
                EMPTY_N => svffB2C_0_EMPTY_N,\par
                ENQ => EN_b2c_0_put,\par
                FULL_N => svffB2C_0_FULL_N,\par
                RST => RST_N\par
                );\par
        vffB2C_1 : FIFO2_1\par
            port map (\par
                CLK => CLK,\par
                CLR => fifo_clr,\par
                DEQ => svffB2C_1_DEQ,\par
                D_IN => b2c_1_put,\par
                D_OUT => svffB2C_1_D_OUT,\par
                EMPTY_N => svffB2C_1_EMPTY_N,\par
                ENQ => EN_b2c_1_put,\par
                FULL_N => svffB2C_1_FULL_N,\par
                RST => RST_N\par
                );\par
        vffB2C_2 : FIFO2_1\par
            port map (\par
                CLK => CLK,\par
                CLR => fifo_clr,\par
                DEQ => svffB2C_2_DEQ,\par
                D_IN => b2c_2_put,\par
                D_OUT => svffB2C_2_D_OUT,\par
                EMPTY_N => svffB2C_2_EMPTY_N,\par
                ENQ => EN_b2c_2_put,\par
                FULL_N => svffB2C_2_FULL_N,\par
                RST => RST_N\par
                );\par
        vffC2B_0 : FIFO2_1\par
            port map (\par
                CLK => CLK,\par
                CLR => fifo_clr,\par
                DEQ => EN_c2b_0_get,\par
                D_IN => sfnChkNodeCore_d16_0,\par
                D_OUT => svffC2B_0_D_OUT,\par
                EMPTY_N => svffC2B_0_EMPTY_N,\par
                ENQ => svffC2B_0_ENQ,\par
                FULL_N => svffC2B_0_FULL_N,\par
                RST => RST_N\par
                );\par
        vffC2B_1 : FIFO2_1\par
            port map (\par
                CLK => CLK,\par
                CLR => fifo_clr,\par
                DEQ => EN_c2b_1_get,\par
                D_IN => sfnChkNodeCore_d16_1,\par
                D_OUT => svffC2B_1_D_OUT,\par
                EMPTY_N => svffC2B_1_EMPTY_N,\par
                ENQ => svffC2B_1_ENQ,\par
                FULL_N => svffC2B_1_FULL_N,\par
                RST => RST_N\par
                );\par
        vffC2B_2 : FIFO2_1\par
            port map (\par
                CLK => CLK,\par
                CLR => fifo_clr,\par
                DEQ => EN_c2b_2_get,\par
                D_IN => sfnChkNodeCore_d16_2,\par
                D_OUT => svffC2B_2_D_OUT,\par
                EMPTY_N => svffC2B_2_EMPTY_N,\par
                ENQ => svffC2B_2_ENQ,\par
                FULL_N => svffC2B_2_FULL_N,\par
                RST => RST_N\par
                );\par
        nbuf_1 : buf1 port map (Y => RDY_b2c_0_put, A => svffB2C_0_FULL_N);\par
        nbuf_2 : buf1 port map (Y => RDY_b2c_1_put, A => svffB2C_1_FULL_N);\par
        nbuf_3 : buf1 port map (Y => RDY_b2c_2_put, A => svffB2C_2_FULL_N);\par
        nbuf_4 : buf1 port map (Y => RDY_c2b_0_get, A => svffC2B_0_EMPTY_N);\par
        nbuf_5 : buf1 port map (Y => RDY_c2b_1_get, A => svffC2B_1_EMPTY_N);\par
        nbuf_6 : buf1 port map (Y => RDY_c2b_2_get, A => svffC2B_2_EMPTY_N);\par
        nbuf_7 : buf1 port map (Y => c2b_0_get, A => svffC2B_0_D_OUT);\par
        nbuf_8 : buf1 port map (Y => c2b_1_get, A => svffC2B_1_D_OUT);\par
        nbuf_9 : buf1 port map (Y => c2b_2_get, A => svffC2B_2_D_OUT);\par
\tab ngnd_0 : std_inv port map (Y=>svffB2C_0_DEQb, A=>svffB2C_0_DEQ);\par
\tab ngnd_1 : std_nand2 port map (Y=>fifo_clr, A=>svffB2C_0_DEQb, B=>svffB2C_0_DEQ);\par
    end; \par
\par
\par
}
 